name: Update Config
on:
  workflow_call:
    inputs:
      environment:
        description: zkSync Environment (mainnet, stage, rinkeby etc)
        type: string
        required: true
      cluster:
        description: Specifies Kubernets cluster
        required: true
        type: string
      ref:
        description: Branch/tag to fetch configs from
        required: true
        type: string
      namespace:
        description: Kubernets namespace of the config
        required: true
        type: string
      restart:
        description: Restart dependent services
        required: false
        type: boolean
        default: false
      skip-update:
        description: Skip Config Update.
        required: false
        type: boolean
        default: false
    secrets:
      github-token:
        description: GitHub token
        required: false

defaults:
  run:
    shell: bash -leo pipefail {0}

# Disable simultaneous deployments into a single environment
concurrency: server-update-config-${{ inputs.environment }}

jobs:
  update:
    name: configMap (server-env-custom)
    runs-on: [self-hosted, deployer, "${{ inputs.cluster }}"]
    container:
      image: dysnix/kubectl:v1.26-gcloud
      options: --user root
      volumes:
        - /var/run/secrets/tokens:/var/run/secrets/tokens
    env:
      ENVFILE: ./compiled_envs/${{ inputs.environment }}.env
      KUBE_CONTEXT: matterlabs-zksync-${{ inputs.cluster }}
      KUBE_TOKENPATH: /var/run/secrets/tokens/gha-deployer-${{ inputs.cluster }}
    steps:
      -
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          repository: matter-labs/gh-workflows
          path: gh-workflows
          token: ${{ secrets.github-token }}
      -
        name: Generate ~/.kube/config
        if: inputs.skip-update
        working-directory: gh-workflows
        run: scripts/kubeconfig-projected-token
      -
        name: Clone configs
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        if: inputs.skip-update
        with:
          repository: matter-labs/configs
          path: configs
          ref: ${{ inputs.ref }}
          token: ${{ secrets.github-token }}
      -
        name: Update Server Config
        working-directory: configs
        if: inputs.skip-update
        run: |
          sudo apk --no-cache add yarn
          ./bin/config
          ./bin/config compile ${{ inputs.environment }}
          kubectl delete configmap -n ${{ inputs.namespace }} server-env-custom || /bin/true
          kubectl create configmap -n ${{ inputs.namespace }} server-env-custom --from-env-file=${{ env.ENVFILE }}

          if [ "${{ inputs.restart }}" = "true" ]; then
            kubectl rollout -n ${{ inputs.namespace }} restart deployment/server-api
            kubectl rollout -n ${{ inputs.namespace }} restart deployment/server
          fi
